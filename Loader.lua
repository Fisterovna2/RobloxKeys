repeat task.wait() until game:IsLoaded()

-- –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
local farmingGui = nil
local menuVisible = false
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

-- –°–æ—Å—Ç–æ—è–Ω–∏—è —Ñ–∞—Ä–º–∞ —Å –≤–∏–∑—É–∞–ª—å–Ω—ã–º–∏ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞–º–∏
local farmingModules = {
    mastery = { enabled = false, thread = nil, toggle = nil, light = nil },
    fruits = { enabled = false, thread = nil, toggle = nil, light = nil },
    chests = { enabled = false, thread = nil, toggle = nil, light = nil },
    bones = { enabled = false, thread = nil, toggle = nil, light = nil }
}

-- –¶–≤–µ—Ç–∞ –¥–ª—è –≤–∏–∑—É–∞–ª—å–Ω–æ–π –∏–Ω–¥–∏–∫–∞—Ü–∏–∏
local colorThemes = {
    mastery = { on = Color3.fromRGB(0, 255, 170), off = Color3.fromRGB(100, 100, 100) },
    fruits = { on = Color3.fromRGB(255, 125, 0), off = Color3.fromRGB(100, 100, 100) },
    chests = { on = Color3.fromRGB(255, 255, 0), off = Color3.fromRGB(100, 100, 100) },
    bones = { on = Color3.fromRGB(180, 0, 255), off = Color3.fromRGB(100, 100, 100) }
}

-- –ê–Ω–∏–º–∞—Ü–∏—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è
local function animateToggle(module, key)
    if module.toggle and module.light then
        local targetColor = module.enabled and colorThemes[key].on or colorThemes[key].off
        
        -- –ê–Ω–∏–º–∞—Ü–∏—è —Ñ–æ–Ω–∞
        TweenService:Create(
            module.toggle,
            TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
            { BackgroundColor3 = targetColor }
        ):Play()
        
        -- –ê–Ω–∏–º–∞—Ü–∏—è "—Å–≤–µ—Ç–æ–¥–∏–æ–¥–∞"
        TweenService:Create(
            module.light,
            TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
            { BackgroundColor3 = targetColor }
        ):Play()
        
        -- –ê–Ω–∏–º–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞
        module.toggle.Text = module.enabled and "–í–ö–õ" or "–í–´–ö–õ"
    end
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è –∫ —Ü–µ–ª–∏
local function moveTo(targetPosition)
    if not LocalPlayer.Character then return end
    local humanoid = LocalPlayer.Character:FindFirstChild("Humanoid")
    local rootPart = LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
    
    if humanoid and rootPart then
        humanoid:MoveTo(targetPosition)
    end
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞—Ç–∞–∫–∏ –≤—Ä–∞–≥–æ–≤
local function attackEnemy()
    -- –≠–º—É–ª—è—Ü–∏—è –∞—Ç–∞–∫–∏
    if not LocalPlayer.Character then return end
    local tool = LocalPlayer.Character:FindFirstChildOfClass("Tool")
    
    if tool then
        tool:Activate()
    else
        -- –≠–º—É–ª—è—Ü–∏—è –∫–ª–∏–∫–∞ –º—ã—à–∏ –µ—Å–ª–∏ –Ω–µ—Ç –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞
        mouse1press()
        task.wait(0.1)
        mouse1release()
    end
end

-- –§—É–Ω–∫—Ü–∏—è —Ñ–∞—Ä–º–∞ –º–∞—Å—Ç–µ—Ä–∏ (—Å –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ–º –∫ –≤—Ä–∞–≥–∞–º –∏ –∞—Ç–∞–∫–æ–π)
local function startMasteryFarm()
    while farmingModules.mastery.enabled and task.wait(0.1) do
        -- –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–º–µ—Ä—Ç—å
        if not LocalPlayer.Character or LocalPlayer.Character:FindFirstChild("Humanoid") and LocalPlayer.Character.Humanoid.Health <= 0 then
            task.wait(2)
            continue
        end
        
        -- –ü–æ–∏—Å–∫ –±–ª–∏–∂–∞–π—à–µ–≥–æ –≤—Ä–∞–≥–∞
        local nearestEnemy, minDistance = nil, math.huge
        for _, enemy in ipairs(workspace.Enemies:GetChildren()) do
            if enemy:FindFirstChild("HumanoidRootPart") and enemy:FindFirstChild("Humanoid") and enemy.Humanoid.Health > 0 then
                local distance = (LocalPlayer.Character.HumanoidRootPart.Position - enemy.HumanoidRootPart.Position).Magnitude
                if distance < minDistance then
                    minDistance = distance
                    nearestEnemy = enemy
                end
            end
        end
        
        if nearestEnemy then
            -- –ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –∫ –≤—Ä–∞–≥—É
            moveTo(nearestEnemy.HumanoidRootPart.Position)
            
            -- –ê—Ç–∞–∫–∞, –µ—Å–ª–∏ –≤—Ä–∞–≥ –±–ª–∏–∑–∫–æ
            if minDistance < 20 then
                attackEnemy()
            end
        else
            print("–í—Ä–∞–≥–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        end
    end
end

-- –§—É–Ω–∫—Ü–∏—è —Ñ–∞—Ä–º–∞ —Ñ—Ä—É–∫—Ç–æ–≤
local function startFruitFarm()
    while farmingModules.fruits.enabled and task.wait(1) do
        -- –ü–æ–∏—Å–∫ —Ñ—Ä—É–∫—Ç–æ–≤
        local fruits = {}
        for _, fruit in ipairs(workspace:GetChildren()) do
            if fruit.Name:find("Fruit") and fruit:FindFirstChild("Handle") then
                table.insert(fruits, fruit)
            end
        end
        
        if #fruits > 0 then
            -- –í—ã–±–æ—Ä –±–ª–∏–∂–∞–π—à–µ–≥–æ —Ñ—Ä—É–∫—Ç–∞
            table.sort(fruits, function(a,b)
                return (a.Handle.Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <
                       (b.Handle.Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
            end)
            
            moveTo(fruits[1].Handle.Position)
        end
    end
end

-- –§—É–Ω–∫—Ü–∏—è —Ñ–∞—Ä–º–∞ —Å—É–Ω–¥—É–∫–æ–≤
local function startChestFarm()
    while farmingModules.chests.enabled and task.wait(1) do
        -- –ü–æ–∏—Å–∫ —Å—É–Ω–¥—É–∫–æ–≤
        local chests = {}
        for _, chest in ipairs(workspace:GetChildren()) do
            if chest.Name:find("Chest") and chest:FindFirstChild("Chest") then
                table.insert(chests, chest.Chest)
            end
        end
        
        if #chests > 0 then
            -- –í—ã–±–æ—Ä –±–ª–∏–∂–∞–π—à–µ–≥–æ —Å—É–Ω–¥—É–∫–∞
            table.sort(chests, function(a,b)
                return (a.Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <
                       (b.Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
            end)
            
            moveTo(chests[1].Position)
        end
    end
end

-- –§—É–Ω–∫—Ü–∏—è —Ñ–∞—Ä–º–∞ –∫–æ—Å—Ç–µ–π
local function startBonesFarm()
    while farmingModules.bones.enabled and task.wait(0.7) do
        -- –ü–æ–∏—Å–∫ –∫–æ—Å—Ç–µ–π
        local bones = {}
        for _, bone in ipairs(workspace:GetChildren()) do
            if bone.Name == "Bone" and bone:IsA("MeshPart") then
                table.insert(bones, bone)
            end
        end
        
        if #bones > 0 then
            -- –í—ã–±–æ—Ä –±–ª–∏–∂–∞–π—à–µ–π –∫–æ—Å—Ç–∏
            table.sort(bones, function(a,b)
                return (a.Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <
                       (b.Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
            end)
            
            moveTo(bones[1].Position)
        end
    end
end

-- –°–æ–∑–¥–∞–Ω–∏–µ –º–µ–Ω—é —Å –≤–∏–∑—É–∞–ª—å–Ω—ã–º–∏ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—è–º–∏
local function createFarmingMenu()
    if farmingGui then farmingGui:Destroy() end
    
    farmingGui = Instance.new("ScreenGui")
    farmingGui.Name = "FarmingMenuGUI"
    farmingGui.Parent = game:GetService("CoreGui")
    
    local mainFrame = Instance.new("Frame")
    mainFrame.Size = UDim2.new(0, 380, 0, 420)
    mainFrame.Position = UDim2.new(0.5, -190, 0.5, -210)
    mainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 40)
    mainFrame.BackgroundTransparency = 0.1
    mainFrame.BorderSizePixel = 0
    mainFrame.Active = true
    mainFrame.Draggable = true
    mainFrame.Parent = farmingGui
    
    local background = Instance.new("Frame")
    background.Size = UDim2.new(1, 0, 1, 0)
    background.BackgroundColor3 = Color3.fromRGB(20, 20, 30)
    background.BorderSizePixel = 0
    background.ZIndex = 0
    background.Parent = mainFrame
    
    -- –¢–µ–Ω—å
    local shadow = Instance.new("ImageLabel")
    shadow.Size = UDim2.new(1, 10, 1, 10)
    shadow.Position = UDim2.new(0, -5, 0, -5)
    shadow.Image = "rbxassetid://1316045217"
    shadow.ImageColor3 = Color3.new(0, 0, 0)
    shadow.ScaleType = Enum.ScaleType.Slice
    shadow.SliceCenter = Rect.new(10, 10, 118, 118)
    shadow.BackgroundTransparency = 1
    shadow.ZIndex = -1
    shadow.Parent = mainFrame
    
    -- –ó–∞–≥–æ–ª–æ–≤–æ–∫
    local title = Instance.new("TextLabel")
    title.Text = "BLOCK FRUITS FARM MENU"
    title.Size = UDim2.new(1, 0, 0, 50)
    title.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
    title.TextColor3 = Color3.fromRGB(0, 255, 255)
    title.Font = Enum.Font.GothamBold
    title.TextSize = 22
    title.Parent = mainFrame
    
    -- –°–ø–∏—Å–æ–∫ —Ñ—É–Ω–∫—Ü–∏–π
    local features = {
        { name = "–§–ê–†–ú –ú–ê–°–¢–ï–†–ò", key = "mastery", icon = "üî´" },
        { name = "–§–ê–†–ú –§–†–£–ö–¢–û–í", key = "fruits", icon = "üçé" },
        { name = "–§–ê–†–ú –°–£–ù–î–£–ö–û–í", key = "chests", icon = "üì¶" },
        { name = "–§–ê–†–ú –ö–û–°–¢–ï–ô", key = "bones", icon = "üíÄ" }
    }
    
    for i, feature in ipairs(features) do
        local yPos = 60 + (i-1)*85
        
        -- –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —Ñ—É–Ω–∫—Ü–∏–∏
        local container = Instance.new("Frame")
        container.Size = UDim2.new(0.9, 0, 0, 70)
        container.Position = UDim2.new(0.05, 0, 0, yPos)
        container.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
        container.BackgroundTransparency = 0.3
        container.Parent = mainFrame
        
        -- –ò–∫–æ–Ω–∫–∞ —Ñ—É–Ω–∫—Ü–∏–∏
        local iconLabel = Instance.new("TextLabel")
        iconLabel.Text = feature.icon
        iconLabel.Size = UDim2.new(0, 50, 0, 50)
        iconLabel.Position = UDim2.new(0.05, 0, 0.15, 0)
        iconLabel.TextSize = 30
        iconLabel.BackgroundTransparency = 1
        iconLabel.TextColor3 = colorThemes[feature.key].off
        iconLabel.Parent = container
        
        -- –ù–∞–∑–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
        local label = Instance.new("TextLabel")
        label.Text = feature.name
        label.Size = UDim2.new(0.5, 0, 1, 0)
        label.Position = UDim2.new(0.2, 0, 0, 0)
        label.TextColor3 = Color3.new(1, 1, 1)
        label.Font = Enum.Font.GothamBold
        label.TextSize = 16
        label.TextXAlignment = Enum.TextXAlignment.Left
        label.BackgroundTransparency = 1
        label.Parent = container
        
        -- –í–∏–∑—É–∞–ª—å–Ω—ã–π –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å
        local toggleFrame = Instance.new("Frame")
        toggleFrame.Size = UDim2.new(0, 80, 0, 30)
        toggleFrame.Position = UDim2.new(0.7, 0, 0.3, 0)
        toggleFrame.BackgroundColor3 = Color3.fromRGB(60, 60, 70)
        toggleFrame.BorderSizePixel = 0
        toggleFrame.Parent = container
        
        -- "–°–≤–µ—Ç–æ–¥–∏–æ–¥" –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä
        local light = Instance.new("Frame")
        light.Size = UDim2.new(0, 12, 0, 12)
        light.Position = UDim2.new(0.1, 0, 0.3, 0)
        light.BackgroundColor3 = colorThemes[feature.key].off
        light.BorderSizePixel = 0
        light.ZIndex = 2
        light.Parent = toggleFrame
        
        -- –ö—Ä—É–≥–ª—ã–π –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä
        local corner = Instance.new("UICorner")
        corner.CornerRadius = UDim.new(1, 0)
        corner.Parent = light
        
        -- –¢–µ–∫—Å—Ç —Å—Ç–∞—Ç—É—Å–∞
        local statusText = Instance.new("TextLabel")
        statusText.Size = UDim2.new(0.6, 0, 1, 0)
        statusText.Position = UDim2.new(0.3, 0, 0, 0)
        statusText.Text = "–í–´–ö–õ"
        statusText.TextColor3 = Color3.new(0.8, 0.8, 0.8)
        statusText.Font = Enum.Font.GothamBold
        statusText.TextSize = 14
        statusText.BackgroundTransparency = 1
        statusText.Parent = toggleFrame
        
        -- –°–æ—Ö—Ä–∞–Ω—è–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏
        farmingModules[feature.key].toggle = statusText
        farmingModules[feature.key].light = light
        
        -- –û–±–Ω–æ–≤–ª—è–µ–º –≤–∏–∑—É–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        animateToggle(farmingModules[feature.key], feature.key)
        
        -- –ö–ª–∏–∫–∞–±–µ–ª—å–Ω–∞—è –æ–±–ª–∞—Å—Ç—å
        local clickArea = Instance.new("TextButton")
        clickArea.Size = UDim2.new(1, 0, 1, 0)
        clickArea.BackgroundTransparency = 1
        clickArea.Text = ""
        clickArea.ZIndex = 5
        clickArea.Parent = toggleFrame
        
        -- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞
        clickArea.MouseButton1Click:Connect(function()
            farmingModules[feature.key].enabled = not farmingModules[feature.key].enabled
            
            -- –ê–Ω–∏–º–∞—Ü–∏—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è
            animateToggle(farmingModules[feature.key], feature.key)
            
            -- –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏—è–º–∏
            if feature.key == "mastery" then
                if farmingModules.mastery.enabled then
                    farmingModules.mastery.thread = task.spawn(startMasteryFarm)
                elseif farmingModules.mastery.thread then
                    task.cancel(farmingModules.mastery.thread)
                    farmingModules.mastery.thread = nil
                end
                
            elseif feature.key == "fruits" then
                if farmingModules.fruits.enabled then
                    farmingModules.fruits.thread = task.spawn(startFruitFarm)
                elseif farmingModules.fruits.thread then
                    task.cancel(farmingModules.fruits.thread)
                    farmingModules.fruits.thread = nil
                end
                
            elseif feature.key == "chests" then
                if farmingModules.chests.enabled then
                    farmingModules.chests.thread = task.spawn(startChestFarm)
                elseif farmingModules.chests.thread then
                    task.cancel(farmingModules.chests.thread)
                    farmingModules.chests.thread = nil
                end
                
            elseif feature.key == "bones" then
                if farmingModules.bones.enabled then
                    farmingModules.bones.thread = task.spawn(startBonesFarm)
                elseif farmingModules.bones.thread then
                    task.cancel(farmingModules.bones.thread)
                    farmingModules.bones.thread = nil
                end
            end
        end)
    end
    
    -- –ö–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è
    local closeBtn = Instance.new("TextButton")
    closeBtn.Text = "–ó–ê–ö–†–´–¢–¨ (M)"
    closeBtn.Size = UDim2.new(0.9, 0, 0, 40)
    closeBtn.Position = UDim2.new(0.05, 0, 0, 360)
    closeBtn.BackgroundColor3 = Color3.fromRGB(180, 50, 50)
    closeBtn.BackgroundTransparency = 0.3
    closeBtn.TextColor3 = Color3.new(1, 1, 1)
    closeBtn.Font = Enum.Font.GothamBold
    closeBtn.TextSize = 16
    closeBtn.Parent = mainFrame
    
    -- –°–∫—Ä—É–≥–ª–µ–Ω–∏–µ —É–≥–ª–æ–≤ –∫–Ω–æ–ø–∫–∏
    local btnCorner = Instance.new("UICorner")
    btnCorner.CornerRadius = UDim.new(0, 8)
    btnCorner.Parent = closeBtn
    
    -- –≠—Ñ—Ñ–µ–∫—Ç –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏ (–ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø)
    closeBtn.MouseEnter:Connect(function()
        TweenService:Create(closeBtn, TweenInfo.new(0.2), {
            BackgroundTransparency = 0.1,
            TextColor3 = Color3.new(1, 0.8, 0.8)
        }):Play()
    end)
    
    closeBtn.MouseLeave:Connect(function()
        TweenService:Create(closeBtn, TweenInfo.new(0.2), {
            BackgroundTransparency = 0.3,
            TextColor3 = Color3.new(1, 1, 1)
        }):Play()
    end)
    
    closeBtn.MouseButton1Click:Connect(function()
        farmingGui:Destroy()
        menuVisible = false
    end)
    
    -- –°–∫—Ä—É–≥–ª–µ–Ω–∏–µ —É–≥–ª–æ–≤ –≥–ª–∞–≤–Ω–æ–≥–æ –æ–∫–Ω–∞
    local mainCorner = Instance.new("UICorner")
    mainCorner.CornerRadius = UDim.new(0, 12)
    mainCorner.Parent = mainFrame
    
    return farmingGui
end

-- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∞–≤–∏—à–∏ M (–ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô)
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if input.KeyCode == Enum.KeyCode.M and not gameProcessed then
        menuVisible = not menuVisible
        
        if menuVisible then
            createFarmingMenu()
            print("–ú–µ–Ω—é –æ—Ç–∫—Ä—ã—Ç–æ")
        else
            if farmingGui then
                farmingGui:Destroy()
                farmingGui = nil
                print("–ú–µ–Ω—é –∑–∞–∫—Ä—ã—Ç–æ")
            end
        end
    end
end)

-- –ó–∞–≥—Ä—É–∑–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞ Blox Fruits (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
if game.PlaceId == 2753915549 then
    pcall(function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/Fisterovna2/RobloxKeys/main/Loader.lua"))()
    end)
end

-- –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
task.spawn(function()
    task.wait(3) -- –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏
    game.StarterGui:SetCore("SendNotification", {
        Title = "–§–ê–†–ú –ú–ï–ù–Æ",
        Text = "–ù–∞–∂–º–∏—Ç–µ M –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è/–∑–∞–∫—Ä—ã—Ç–∏—è –º–µ–Ω—é",
        Icon = "rbxassetid://6726578090",
        Duration = 5
    })
    print("–ú–µ–Ω—é —Ñ–∞—Ä–º–∞ –≥–æ—Ç–æ–≤–æ! –ù–∞–∂–º–∏—Ç–µ M –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è.")
end)

-- –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
task.spawn(function()
    while true do
        task.wait(5)
        print("–°–∫—Ä–∏–ø—Ç –∞–∫—Ç–∏–≤–µ–Ω. –ú–µ–Ω—é:", menuVisible and "–æ—Ç–∫—Ä—ã—Ç–æ" or "–∑–∞–∫—Ä—ã—Ç–æ")
    end
end)
